if not game:IsLoaded() then
    game.Loaded:Wait()
    task.wait(1)
end

repeat task.wait(0.1) until game:GetService("Players").LocalPlayer and game:GetService("Players").LocalPlayer.Character

local SG = Instance.new("ScreenGui")
SG.Parent = game:GetService("CoreGui")
SG.Name = "abcdefg"
SG.IgnoreGuiInset = true
local TL = Instance.new("TextLabel")
TL.Parent = SG
TL.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
TL.Active = false
TL.Font = Enum.Font.MontserratMedium
TL.TextColor3 = Color3.fromRGB(200, 200, 200)
TL.TextSize = 24
TL.AnchorPoint = Vector2.new(0.5, 0.5)
TL.Position = UDim2.new(0.5, 0, 0.5, 0)
TL.Size = UDim2.new(1, 0, 1, 0)

local Player = game:GetService("Players").LocalPlayer
local Cashiers = workspace.Cashiers
local Drop = workspace.Ignored.Drop
local Dis = false
local Broken = 0
local StartTick = os.time()
local StartCash = Player.DataFolder.Currency.Value  -- Inicializa el valor de StartCash aquí

_G.Disable = function()
    Dis = true
    game:GetService("RunService"):Set3dRenderingEnabled(true)
    setfpscap(60)
    game:GetService("CoreGui").abcdefg:Destroy()
end

Player.DevCameraOcclusionMode = Enum.DevCameraOcclusionMode.Invisicam
Player.CameraMaxZoomDistance = 6
Player.CameraMinZoomDistance = 6

TL.Text = "Loading...\nOnly works if da hood is loaded!"

pcall(function()local a=game:GetService("ReplicatedStorage").MainEvent;local b={"CHECKER_1","TeleportDetect","OneMoreTime"}local c;c=hookmetamethod(game,"__namecall",function(...)local d={...}local self=d[1]local e=getnamecallmethod()if e=="FireServer"and self==a and table.find(b,d[2])then return end return c(...)end)end)

local Click = function(Part)
    local Input = game:GetService("VirtualInputManager")
    local Pos = workspace.Camera:WorldToScreenPoint(Part.Position)
    local T = os.time()

    if Part:GetAttribute("OriginalPos") == nil then
        Part:SetAttribute("OriginalPos", Part.Position)
    end

    repeat
        Part.CFrame = (workspace.Camera.CFrame + workspace.Camera.CFrame.LookVector * 1) * CFrame.Angles(90, 0, 0)
        Input:SendMouseButtonEvent(workspace.Camera.ViewportSize.X / 2, workspace.Camera.ViewportSize.Y / 2, 0, true, game, 1)
        task.wait()
        Input:SendMouseButtonEvent(workspace.Camera.ViewportSize.X / 2, workspace.Camera.ViewportSize.Y / 2, 0, false, game, 1)
    until Part == nil or Part:FindFirstChild("ClickDetector") == nil or os.time() - T >= 2
end

local AntiSit = function(Char)
    task.wait(1)
    local Hum = Char:WaitForChild("Humanoid")
    Hum.Seated:Connect(function()
        warn("SITTING")
        Hum.Sit = false
        Hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
        task.wait(0.3)
        Hum.Jump = true
    end)
end

local GetCash = function()
    local Found = {}

    for _, v in pairs(Drop:GetChildren()) do
        if v.Name == "MoneyDrop" then
            local Pos
            if v:GetAttribute("OriginalPos") ~= nil then
                Pos = v:GetAttribute("OriginalPos")
            else
                Pos = v.Position
            end
            if (Pos - Player.Character.HumanoidRootPart.Position).Magnitude <= 17 then
                Found[#Found + 1] = v
            end
        end
    end
    return Found
end

local GetCashier = function()
    for _, v in pairs(Cashiers:GetChildren()) do
        if _ == 15 and (Vector3.new(-625, 10, -286) - v.Head.Position).Magnitude <= 20 then
            v:MoveTo(Vector3.new(-622.948, 24, -286.52))
            for _, z in pairs(v:GetChildren()) do
                if z:IsA("Part") or z:IsA("BasePart") then
                    z.CanCollide = false
                end
            end
        elseif _ == 16 and (Vector3.new(-625, 10, -286) - v.Head.Position).Magnitude <= 20 then
            v:MoveTo(Vector3.new(-629.948, 24, -286.52))
            for _, z in pairs(v:GetChildren()) do
                if z:IsA("Part") or z:IsA("BasePart") then
                    z.CanCollide = false
                end
            end
        end

        if v.Humanoid.Health > 0 then
            return v
        end
    end
    return nil
end

local To = function(CF)
    if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
        Player.Character.HumanoidRootPart.CFrame = CF
        Player.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
    end
end

local function StartAutoFarm()
    task.spawn(function()
        while true and task.wait() do
            -- Espera hasta que el personaje esté completamente cargado
            if Player.Character == nil or Player.Character:FindFirstChild("FULLY_LOADED_CHAR") == nil or Dis then
                print("Character not loaded, waiting for it to load.")
                task.wait(0.5)
                continue
            end

            local Cashier = nil
            repeat
                Cashier = GetCashier()

                -- Asegúrate de que "Combat" esté equipado
                if Player.Backpack:FindFirstChild("Combat") then
                    Player.Backpack.Combat.Parent = Player.Character
                end

                task.wait()
            until Cashier ~= nil

            repeat
                To((Cashier.Head.CFrame + Vector3.new(0, -2.5, 0)) * CFrame.Angles(math.rad(90), 0, 0))
                task.wait()
                if Player.Character:FindFirstChild("Combat") then
                    Player.Character.Combat:Activate()
                end
            until Cashier.Humanoid.Health <= 0
            Broken += 1
            print("ATM broken successfully.")

            To(Cashier.Head.CFrame + Cashier.Head.CFrame.LookVector * Vector3.new(0, 2, 0))

            for _, v in pairs(Player.Character:GetChildren()) do
                if v:IsA("Tool") then
                    v.Parent = Player.Backpack
                end
            end

            -- Espera a que el HumanoidRootPart esté disponible antes de recoger dinero
            local HumanoidRootPart = Player.Character:WaitForChild("HumanoidRootPart")

            -- Recoger dinero asegurándose de que la interfaz de usuario ha cargado
            for i = 1, 6 do  -- Intentar recoger más dinero
                local Cash = GetCash()
                local attemptCount = 0
                local success = false

                while attemptCount < 3 and not success do
                    success = true
                    for _, v in pairs(Cash) do
                        Click(v)
                        task.wait(0.1)  -- Esperar un poco entre clics
                    end

                    -- Revisa si hay MoneyDrop que no se recogieron
                    local CashAfter = GetCash()
                    for _, v in pairs(CashAfter) do
                        Click(v)
                        success = false  -- Marca como fallido si se recogió algo nuevo
                    end

                    attemptCount += 1
                end
            end
        end
    end)
    local StartCash = Player.DataFolder.Currency.Value
    task.spawn(function()
        while true and task.wait(0.5) do
            -- Obtener la cantidad de jugadores
            local PlayerCount = #game.Players:GetPlayers()

            -- Actualizar el texto
            TL.Text = "AutoFarm V1.2\n@" .. Player.Name .. "\n$" .. tostring(Player.DataFolder.Currency.Value):reverse():gsub("...", "%0,", math.floor((#tostring(Player.DataFolder.Currency.Value) - 1) / 3)):reverse() ..
                "\nTotal players: " .. PlayerCount .. -- Mostrar la cantidad de jugadores
                "\n" .. string.format("%02i:%02i:%02i", (os.time() - StartTick) / 60^2, (os.time() - StartTick) / 60 % 60, (os.time() - StartTick) % 60) .. -- Mostrar el tiempo
                "\nProfit: $" .. tostring(Player.DataFolder.Currency.Value - StartCash):reverse():gsub("...", "%0,", math.floor((#tostring(Player.DataFolder.Currency.Value - StartCash) - 1) / 3)):reverse() ..
                "\nTotal ATMS: " .. Broken  -- Mostrar la cantidad de jugadores-- Mostrar la ganancia
        end
    end)
end

for i = 1, 10 do 
	setfpscap(_G.AutofarmSettings.Fps)
	task.wait(0.1)
end

if (_G.AutofarmSettings.Saver == true) then 
	game:GetService("RunService"):Set3dRenderingEnabled(false) 
else 
	SG.Enabled = false
end

Player.CharacterAdded:Connect(function(char)
    char:WaitForChild("Humanoid")
    AntiSit(char)  -- Iniciar AntiSit
    StartAutoFarm()  -- Iniciar AutoFarm cuando el personaje sea añadido
end)

StartAutoFarm()  -- Iniciar AutoFarm por primera vez
